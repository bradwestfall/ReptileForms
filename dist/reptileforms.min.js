!function($,window,document,undefined){ReptileForm=function(e,t){var a=this;return a.customValidationFunctions=[],a.el=$(e),a.el.length?(a.settings=$.extend(!0,{xhr:!0,expressions:{number:{rule:/^\d+$/,msg:"Invalid Number"},email:{rule:/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/,msg:"Invalid Email."},password:{rule:/^[\040-\176]{6,}$/,msg:"Invalid Password, Must be at least 6 characters."}}},t),a.el.attr("novalidate","novalidate"),a.clearErrors(),a.clearValues(),!a.el.attr("method")&&a.settings.xhr&&a.el.attr("method","POST"),!a.el.attr("action")&&a.settings.xhr&&console.error("ReptileForm: action attribue is required when in xhr mode"),a.el.children("input, select, textarea, .field-input").each(function(){if($(this).parents(".field").length)return!1;var e=$(this);switch(!0){case"hidden"==e.attr("type"):a.renderHiddenField(e);break;case e.hasClass("field-input"):e.replaceWith(a.renderCustomField(e));break;default:e.replaceWith(a.renderField(e))}}),a.el.on("submit",function(){return $(a).trigger("beforeValidation"),a.validForm(this)?($(a).trigger("beforeSubmit"),a.settings.xhr?a.submit(a.el.attr("action"),a.getValues()):!0):($(a).trigger("validationError",[a.getErrors()]),!1)}),a.customValidation=function(e,t){this.customValidationFunctions[e]=t},a.customValidation("validateRadioGroup",function(e,t){{var a=e.find("input:checked").val();e.data("name")}return e.data("required")&&!a&&t("Value Is Required"),a}),void a.customValidation("validateCheckboxGroup",function(e){{var t=$('input[type="checkbox"]:checked').map(function(){return $(this).val()}).get();e.data("name")}return e.data("required")&&!t.length&&error("Value Is Required"),t})):!1},ReptileForm.prototype.on=function(e,t){$(this).on(e,t)},ReptileForm.prototype.submit=function(e,t){var a=this;return $.ajax({cache:!1,type:a.el.attr("method"),dataType:"JSON",url:e,data:t,success:function(e){$(a).trigger("xhrSuccess",e)},error:function(e,t,r){$(a).trigger("xhrError",e,t,r)}}),!1},ReptileForm.prototype.renderField=function(e){var t=e.attr("name"),a=e.attr("title")||null,r=Boolean(e.attr("required")),i=e.data("exp-name")||null,o=e.data("custom-validation")||null;if(!t)return console.error("ReptileForm: Unknown Field removed - name attribute not given"),null;var n=$(e[0].outerHTML);n.removeAttr("title data-exp-name");var n=$(document.createElement("div")).addClass("field-input").html(n),l="";switch(e[0].tagName.toLowerCase()){case"select":l="select";break;case"textarea":l="textarea";break;case"input":default:l="text"}return $(document.createElement("div")).data("name",t).data("title",a?a:t).data("exp-name",i).data("custom-validation",o).data("required",r).addClass("field").addClass(t).addClass(r?"required":null).addClass(l).append(a?"<label>"+a+"</label>":null).append(n)},ReptileForm.prototype.renderCustomField=function(e){var t=e.data("type");switch(t!==undefined&&t.toLowerCase()){case"radio-group":var a=e.find('input[type="radio"]').first(),r=a.attr("name"),i=Boolean(a.attr("required")),o="validateRadioGroup";break;case"checkbox-group":var a=e.find('input[type="checkbox"]').first(),r=a.attr("name"),i=Boolean(a.attr("required")),o="validateCheckboxGroup";break;default:var r=e.data("name")||null,i=Boolean(e.data("required")),o=e.data("custom-validation")||null}var n=e.attr("title");if(!r)return console.error("ReptileForm: Unknown Field removed - name attribute not given"),null;var l=$(e[0].outerHTML);return l.removeAttr("data-name data-required data-type data-custom-validation"),$(document.createElement("div")).data("name",r).data("title",n).data("custom-validation",o).data("required",i).addClass("field").addClass(r).addClass(i?"required":null).addClass(t).append(n?"<label>"+n+"</label>":null).append(l)},ReptileForm.prototype.renderHiddenField=function(e){var t=e.attr("name"),a=t,r=Boolean(e.attr("required"));return t?(e.addClass("field").addClass(t).data("name",e.attr("name")).data("title",a).data("required",r),e.prop("outerHTML")):(console.error("ReptileForm: Unknown Hidden Field removed - name attribute not given"),null)},ReptileForm.prototype.validForm=function(form){var self=this,form=$(form);return self.clearErrors(),self.clearValues(),form.find(".field").each(function(){var value="",formField=$(this),title=formField.data("title"),name=formField.data("name"),customValidationName=formField.data("custom-validation");if(customValidationName&&$.isFunction(self.customValidationFunctions[customValidationName]))return value=self.customValidationFunctions[customValidationName].call(self,formField,function(e){self.addError(name,title,e)}),void self.storeValue(name,value);if(value=self.getFieldValue(formField),self.storeValue(name,value),formField.data("required")||value){if(formField.data("required")&&!value)return void self.addError(name,title,"Value is required");var expName=formField.data("exp-name");if(expName&&self.settings.expressions){if(!self.settings.expressions[expName])return console.error("Expresion: '"+expName+"' has not been added to ReptileForms expressions"),!1;var expression=self.settings.expressions[expName];if("string"==typeof expression.rule)eval(expression.rule).test(value)||self.addError(name,title,expression.msg);else{var regex=new RegExp(expression.rule);regex.test(value)||self.addError(name,title,expression.msg)}}}}),$.isEmptyObject(self.getErrors())},ReptileForm.prototype.getFieldValue=function(e){{var t;e.data("name")}switch(!0){case e.attr("type")&&"hidden"==e.attr("type").toLowerCase():t=e.val();break;default:t=e.find("input, select, textarea").val()||null}return t},ReptileForm.prototype.addError=function(e,t,a){this.formErrors.push({name:e,title:t,msg:a})},ReptileForm.prototype.clearErrors=function(){this.formErrors=[]},ReptileForm.prototype.getErrors=function(){return this.formErrors},ReptileForm.prototype.storeValue=function(e,t){this.formValues[e]=t},ReptileForm.prototype.clearValues=function(){this.formValues={}},ReptileForm.prototype.getValues=function(){return this.formValues}}(jQuery,window,document);